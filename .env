# In all environments, the following files are loaded if they exist,
# the latter taking precedence over the former:
#
#  * .env                contains default values for the environment variables needed by the app
#  * .env.local          uncommitted file with local overrides
#  * .env.$APP_ENV       committed environment-specific defaults
#  * .env.$APP_ENV.local uncommitted environment-specific overrides
#
# Real environment variables win over .env files.
#
# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.
#
# Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration

###> symfony/framework-bundle ###
APP_ENV=dev
APP_SECRET=1ddf2dad00a0c138aa1d2d08b9f80a3e
###< symfony/framework-bundle ###

###> symfony/mailer ###
# MAILER_DSN=smtp://localhost
###< symfony/mailer ###

###> doctrine/doctrine-bundle ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
#
# DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
# DATABASE_URL="mysql://db_user:db_password@127.0.0.1:3306/db_name?serverVersion=5.7"
DATABASE_URL="postgresql://db_user:db_password@127.0.0.1:5432/db_name?serverVersion=13&charset=utf8"
###< doctrine/doctrine-bundle ###

###> nelmio/cors-bundle ###
CORS_ALLOW_ORIGIN='^https?://(localhost|127\.0\.0\.1)(:[0-9]+)?$'
###< nelmio/cors-bundle ###

###> symfony/swiftmailer-bundle ###
# For Gmail as a transport, use: "gmail://username:password@localhost"
# For a generic SMTP server, use: "smtp://localhost:25?encryption=&auth_mode="
# Delivery is disabled by default via "null://localhost"
MAILER_URL=null://localhost
###< symfony/swiftmailer-bundle ###

###> lexik/jwt-authentication-bundle ###
JWT_SECRET_KEY=%kernel.project_dir%/config/jwt/private.pem
JWT_PUBLIC_KEY=%kernel.project_dir%/config/jwt/public.pem
JWT_PASSPHRASE=093a7cdea3e692f7df866ff5285b2364
###< lexik/jwt-authentication-bundle ###

###> symfony/lock ###
# Choose one of the stores below
# postgresql+advisory://db_user:db_password@localhost/db_name
LOCK_DSN=semaphore
###< symfony/lock ###

###> nelmio/solarium-bundle ###
SOLR_HOST=localhost
SOLR_CORE=example
###< nelmio/solarium-bundle ###

###> google/recaptcha ###
# To use Google Recaptcha, you must register a site on Recaptcha's admin panel:
# https://www.google.com/recaptcha/admin
GOOGLE_RECAPTCHA_SITE_KEY=
GOOGLE_RECAPTCHA_SECRET=
###< google/recaptcha ###

###> excelwebzone/recaptcha-bundle ###
EWZ_RECAPTCHA_SITE_KEY=
EWZ_RECAPTCHA_SECRET=
###< excelwebzone/recaptcha-bundle ###

###> ibexa/oss ###
SEARCH_ENGINE=legacy
# Uncomment following line if you want to change the purge type.
# By default it will use `local` purge when running locally
# and `varnish` for Platform.sh installations.
# HTTPCACHE_PURGE_TYPE=local
HTTPCACHE_DEFAULT_TTL=86400
HTTPCACHE_PURGE_SERVER=http://localhost:80
HTTPCACHE_VARNISH_INVALIDATE_TOKEN=
CACHE_POOL=cache.tagaware.filesystem
# When using redis or memcached adapters, you can configure it using DSN:
# - https://symfony.com/doc/4.4/components/cache/adapters/redis_adapter.html#configure-the-connection
# - https://symfony.com/doc/4.4/components/cache/adapters/memcached_adapter.html#configure-the-connection
CACHE_DSN=localhost
CACHE_NAMESPACE=ezp
DATABASE_CHARSET=utf8mb4
DATABASE_COLLATION=utf8mb4_unicode_520_ci
# Needed by Doctrine Bundle / ORM to avoid it opening connection during situations where there is no service yet.
# See: https://symfony.com/doc/current/reference/configuration/doctrine.html#doctrine-dbal-configuration
DATABASE_VERSION=mariadb-10.3.0
SESSION_HANDLER_ID=session.handler.native_file
SESSION_SAVE_PATH=%kernel.project_dir%/var/sessions/%kernel.environment%
SOLR_DSN=http://localhost:8983/solr
SOLR_CORE=collection1
###< ibexa/oss ###

###> ibexa/content ###
SEARCH_ENGINE=legacy
# Uncomment following line if you want to change the purge type.
# By default it will use `local` purge when running locally
# and `varnish` for Platform.sh installations.
# HTTPCACHE_PURGE_TYPE=local
HTTPCACHE_DEFAULT_TTL=86400
HTTPCACHE_PURGE_SERVER=http://localhost:80
HTTPCACHE_VARNISH_INVALIDATE_TOKEN=
CACHE_POOL=cache.tagaware.filesystem
# When using redis or memcached adapters, you can configure it using DSN:
# - https://symfony.com/doc/4.4/components/cache/adapters/redis_adapter.html#configure-the-connection
# - https://symfony.com/doc/4.4/components/cache/adapters/memcached_adapter.html#configure-the-connection
CACHE_DSN=localhost
CACHE_NAMESPACE=ezp
DATABASE_CHARSET=utf8mb4
DATABASE_COLLATION=utf8mb4_unicode_520_ci
# Needed by Doctrine Bundle / ORM to avoid it opening connection during situations where there is no service yet.
# See: https://symfony.com/doc/current/reference/configuration/doctrine.html#doctrine-dbal-configuration
DATABASE_VERSION=mariadb-10.3.0
SESSION_HANDLER_ID=session.handler.native_file
SESSION_SAVE_PATH=%kernel.project_dir%/var/sessions/%kernel.environment%
SOLR_CORE=collection1
# Enable recommendations by setting valid id, key and uri
RECOMMENDATION_CUSTOMER_ID=0
RECOMMENDATION_LICENSE_KEY=
RECOMMENDATION_HOST_URI=
ELASTICSEARCH_DSN=http://localhost:9200
# Enable fastly by setting valid service_id and key
# In order for this to work you also need to have EzSystemsPlatformFastlyCacheBundle installed
# FASTLY_SERVICE_ID=""
# FASTLY_KEY=""
SISO_SEARCH_SOLR_HOST=localhost
SISO_SEARCH_SOLR_PORT=8983
SISO_SEARCH_SOLR_CORE=collection1
# Do not add 'solr' to the path. It is automatically added by SolariumBundle
SISO_SEARCH_SOLR_PATH=
# SolariumBundle Solr DSN configuration
# Note that /solr suffix will be appended autmatically to eZ Platform Solr Search Engine Bundle configuration
SOLR_DSN=http://${SISO_SEARCH_SOLR_HOST}:${SISO_SEARCH_SOLR_PORT}${SISO_SEARCH_SOLR_PATH}
JMS_PAYMENT_SECRET=def00000706ea7318427e72fcea2c8ceb86773a4310e35119c48e3029196acfead1ba8cc898f48d1ef9cb3f7ebe191ab46eaf67ec94a2b6bd17c079ac7277de0175b9e3e
###< ibexa/content ###

###> ibexa/experience ###
SEARCH_ENGINE=legacy
# Uncomment following line if you want to change the purge type.
# By default it will use `local` purge when running locally
# and `varnish` for Platform.sh installations.
# HTTPCACHE_PURGE_TYPE=local
HTTPCACHE_DEFAULT_TTL=86400
HTTPCACHE_PURGE_SERVER=http://localhost:80
HTTPCACHE_VARNISH_INVALIDATE_TOKEN=
CACHE_POOL=cache.tagaware.filesystem
# When using redis or memcached adapters, you can configure it using DSN:
# - https://symfony.com/doc/4.4/components/cache/adapters/redis_adapter.html#configure-the-connection
# - https://symfony.com/doc/4.4/components/cache/adapters/memcached_adapter.html#configure-the-connection
CACHE_DSN=localhost
CACHE_NAMESPACE=ezp
DATABASE_CHARSET=utf8mb4
DATABASE_COLLATION=utf8mb4_unicode_520_ci
# Needed by Doctrine Bundle / ORM to avoid it opening connection during situations where there is no service yet.
# See: https://symfony.com/doc/current/reference/configuration/doctrine.html#doctrine-dbal-configuration
DATABASE_VERSION=mariadb-10.3.0
SESSION_HANDLER_ID=session.handler.native_file
SESSION_SAVE_PATH=%kernel.project_dir%/var/sessions/%kernel.environment%
SOLR_CORE=collection1
# Enable recommendations by setting valid id, key and uri
RECOMMENDATION_CUSTOMER_ID=0
RECOMMENDATION_LICENSE_KEY=
ELASTICSEARCH_DSN=http://localhost:9200
# Enable fastly by setting valid service_id and key
# In order for this to work you also need to have EzSystemsPlatformFastlyCacheBundle installed
# FASTLY_SERVICE_ID=""
# FASTLY_KEY=""
SISO_SEARCH_SOLR_HOST=localhost
SISO_SEARCH_SOLR_PORT=8983
SISO_SEARCH_SOLR_CORE=collection1
# Do not add 'solr' to the path. It is automatically added by SolariumBundle
SISO_SEARCH_SOLR_PATH=
# SolariumBundle Solr DSN configuration
# Note that /solr suffix will be appended autmatically to eZ Platform Solr Search Engine Bundle configuration
SOLR_DSN=http://${SISO_SEARCH_SOLR_HOST}:${SISO_SEARCH_SOLR_PORT}${SISO_SEARCH_SOLR_PATH}
JMS_PAYMENT_SECRET=def00000706ea7318427e72fcea2c8ceb86773a4310e35119c48e3029196acfead1ba8cc898f48d1ef9cb3f7ebe191ab46eaf67ec94a2b6bd17c079ac7277de0175b9e3e
###< ibexa/experience ###
